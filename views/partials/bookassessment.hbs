<form class="ui twelve wide form" action="/dashboard/{{member.id}}/bookassessment" method="POST">
  <table class = "ui celled table" id="bookingTable" style="display: none;">
    <thead>
    <tr>
      <th>Booked Appointments</th>
      <th>Booked with</th>
      <th class="collapsing">Edit</th>
      <th class="collapsing">Remove</th>
    </tr>
    </thead>
    <tbody>
    {{#each member.bookings}}
      <tr>
        <td>{{longDate date}}</td>
        <td>{{trainerName}}</td>
        <td><a href="/dashboard/{{date}}/booking" class="ui blue icon button"><i class="write icon"></i></a>
        <td><a href="/dashboard/{{date}}/{{trainerid}}/rembooking" class="ui red icon button"><i class="trash icon"></i></a>
        </td>
      </tr>
    {{/each}}
    </tbody>
  </table>
  <h4 class="ui dividing header">Book an appointment</h4>
  <div class="three fields">
    <div class="field">
      <label>&nbsp; &nbsp; &nbsp;Date</label>
      <input placeholder="Date" type="date" name="bookDate">
    </div>
    <div class="field">
      <label>&nbsp; &nbsp; &nbsp; Time</label>
      <input placeholder="Time" type="time" name="bookTime" step="3600" min="09:00" max="17:00">
    </div>
    <div class="field">
      <label>&nbsp; &nbsp; &nbsp; Trainer</label>
      <select name="bookedTrainer" class="ui fluid dropdown">
        <option value="" hidden>Pick a trainer</option>
        {{#each trainerList}}
          <option value="{{id}}">{{firstname}} {{lastname}}</option>
        {{/each}}
      </select>
    </div>
  </div>
  <button class="ui blue submit button">Submit</button>
  <div class="ui error message"></div>
  <script>
    $('.dropdown').dropdown();

    const today = new Date().toISOString().split('T')[0];
    document.getElementsByName("bookDate")[0].setAttribute('min', today);

    if({{member.bookings.length}} > 0){
      document.getElementById("bookingTable").style.display = "table";
    }

    $.fn.form.settings.rules.isMemberBooked = function() {

      const bookedDate = new Date( document.getElementsByName("bookDate")[0].value + " " + document.getElementsByName("bookTime")[0].value);
      const memberBookings = [{{{json member.bookings}}}];
      console.log(memberBookings[0]);

      //looping through member.bookings[] to see if the inputted date matches a stored booking
      //if true it'll return false and prompt user with an error message
      for(let i = 0; i < memberBookings[0].length; i++){
        let checkDate = new Date(memberBookings[0][i].date);
        if(checkDate.toString() === bookedDate.toString()){
          console.log(bookedDate);
          return false;
        }
      }
      return true;
    };

    $.fn.form.settings.rules.isTrainerBooked = function() {

      const bookedDate = new Date(document.getElementsByName("bookDate")[0].value + " " + document.getElementsByName("bookTime")[0].value);
      const trainerid = document.getElementsByName("bookedTrainer")[0].value;
      const trainerList = [{{{json trainerList}}}];

      for(let i = 0; i < trainerList[0].length; i++){
        if(trainerList[0][i].id === trainerid){
          for(let k= 0; k < trainerList[0][i].bookings.length; k++){
            let checkDate = new Date(trainerList[0][i].bookings[k].date);
            if(checkDate.toString() === bookedDate.toString()){
              return false;
            }
          }
        }
      }
      return true;
    };

    $('.ui.form').form({
      fields: {
        bookDate: {
          identifier  : 'bookDate',
          rules: [
            {
              type   : 'isTrainerBooked',
              prompt : 'Trainer is not available at that time.'
            },
            {
              type   : 'isMemberBooked',
              prompt : 'You are already booked for that time.'
            },
            {
              type   : 'empty',
              prompt : 'Please select a Date'
            }
          ]
        },
        bookTime: {
          identifier: 'bookTime',
          rules: [
            {
              type: 'isTrainerBooked',
              prompt : 'Please select another day/time'
            },
            {
              type: 'isMemberBooked',
              prompt : 'Please select another day/time'
            },
            {
              type   : 'empty',
              prompt : 'Please select a Time'
            }
          ]
        },
        bookedTrainer: {
          identifier  : 'bookedTrainer',
          rules: [
            {
              type   : 'empty',
              prompt : 'Please select a Trainer'
            }
          ]
        }
      }
    });
  </script>
</form>